name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      db:
        image: mariadb:latest
        env:
          MARIADB_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MARIADB_DATABASE: ${{ secrets.DB_DATABASE }}
          MARIADB_USER: ${{ secrets.DB_USER }}
          MARIADB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 3306/tcp

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker images
        run: |
          docker-compose -f docker-compose.yml build --parallel

      - name: Run tests
        run: |
          docker-compose up -d db # Start database service first
          sleep 15 # Wait for database to initialize (adjust as needed)
          docker-compose run app npm test # Run tests inside app container

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with: username:${{ secrets.DOCKERHUB_USERNAME }} password:${{ secrets.DOCKERHUB_TOKEN }}

      - name: Deploy application
        run: |
          ssh user@your-server "cd /path/to/your/app && git pull && docker-compose down && docker-compose up --build -d"
